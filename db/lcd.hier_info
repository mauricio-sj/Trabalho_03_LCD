|top
sysclk => sysclk.IN2
push_button => push_button.IN2
rs <= lcd:lcd.rs
e <= lcd:lcd.e
d[0] <= lcd:lcd.d
d[1] <= lcd:lcd.d
d[2] <= lcd:lcd.d
d[3] <= lcd:lcd.d
d[4] <= lcd:lcd.d
d[5] <= lcd:lcd.d
d[6] <= lcd:lcd.d
d[7] <= lcd:lcd.d


|top|lcd:lcd
clock => e~reg0.CLK
clock => d[0]~reg0.CLK
clock => d[1]~reg0.CLK
clock => d[2]~reg0.CLK
clock => d[3]~reg0.CLK
clock => d[4]~reg0.CLK
clock => d[5]~reg0.CLK
clock => d[6]~reg0.CLK
clock => d[7]~reg0.CLK
clock => rs~reg0.CLK
clock => flag_100ms.CLK
clock => flag_5ms.CLK
clock => flag_2ms.CLK
clock => flag_200us.CLK
clock => flag_60us.CLK
clock => flag_40us.CLK
clock => flag_250ns.CLK
clock => flag_50ns.CLK
clock => count[0].CLK
clock => count[1].CLK
clock => count[2].CLK
clock => count[3].CLK
clock => count[4].CLK
clock => count[5].CLK
clock => count[6].CLK
clock => count[7].CLK
clock => count[8].CLK
clock => count[9].CLK
clock => count[10].CLK
clock => count[11].CLK
clock => count[12].CLK
clock => count[13].CLK
clock => count[14].CLK
clock => count[15].CLK
clock => count[16].CLK
clock => count[17].CLK
clock => count[18].CLK
clock => count[19].CLK
clock => count[20].CLK
clock => count[21].CLK
clock => count[22].CLK
clock => count[23].CLK
clock => busy_flag~reg0.CLK
clock => counter_clear.CLK
clock => start.CLK
clock => state~27.DATAIN
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => state.OUTPUTSELECT
internal_reset => start.OUTPUTSELECT
internal_reset => busy_flag.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => count.OUTPUTSELECT
internal_reset => flag_50ns.OUTPUTSELECT
internal_reset => flag_250ns.OUTPUTSELECT
internal_reset => flag_40us.OUTPUTSELECT
internal_reset => flag_60us.OUTPUTSELECT
internal_reset => flag_200us.OUTPUTSELECT
internal_reset => flag_2ms.OUTPUTSELECT
internal_reset => flag_5ms.OUTPUTSELECT
internal_reset => flag_100ms.OUTPUTSELECT
internal_reset => counter_clear.OUTPUTSELECT
internal_reset => counter_clear.DATAA
internal_reset => counter_clear.DATAA
d_in[0] => d.DATAB
d_in[1] => d.DATAB
d_in[2] => d.DATAB
d_in[3] => d.DATAB
d_in[4] => d.DATAB
d_in[5] => d.DATAB
d_in[6] => d.DATAB
d_in[7] => d.DATAB
d_in[8] => rs.DATAB
data_ready => start.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => state.OUTPUTSELECT
data_ready => counter_clear.OUTPUTSELECT
data_ready => busy_flag.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => count.OUTPUTSELECT
data_ready => flag_50ns.OUTPUTSELECT
data_ready => flag_250ns.OUTPUTSELECT
data_ready => flag_40us.OUTPUTSELECT
data_ready => flag_60us.OUTPUTSELECT
data_ready => flag_200us.OUTPUTSELECT
data_ready => flag_2ms.OUTPUTSELECT
data_ready => flag_5ms.OUTPUTSELECT
data_ready => flag_100ms.OUTPUTSELECT
data_ready => counter_clear.OUTPUTSELECT
data_ready => counter_clear.OUTPUTSELECT
rs <= rs~reg0.DB_MAX_OUTPUT_PORT_TYPE
e <= e~reg0.DB_MAX_OUTPUT_PORT_TYPE
d[0] <= d[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d[1] <= d[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d[2] <= d[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d[3] <= d[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d[4] <= d[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d[5] <= d[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d[6] <= d[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d[7] <= d[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
busy_flag <= busy_flag~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|rom:rom
rom_in[0] => Decoder0.IN5
rom_in[1] => Decoder0.IN4
rom_in[2] => Decoder0.IN3
rom_in[3] => Decoder0.IN2
rom_in[4] => Decoder0.IN1
rom_in[5] => Decoder0.IN0
rom_out[0] <= WideOr14.DB_MAX_OUTPUT_PORT_TYPE
rom_out[1] <= WideOr12.DB_MAX_OUTPUT_PORT_TYPE
rom_out[2] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
rom_out[3] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
rom_out[4] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
rom_out[5] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
rom_out[6] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
rom_out[7] <= <GND>
rom_out[8] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE


|top|controller:controller
clock => old_reset.CLK
clock => halt.CLK
clock => current_lcd_state.CLK
clock => data_ready~reg0.CLK
clock => rom_address[0]~reg0.CLK
clock => rom_address[1]~reg0.CLK
clock => rom_address[2]~reg0.CLK
clock => rom_address[3]~reg0.CLK
lcd_busy => always0.IN1
lcd_busy => always0.IN1
lcd_busy => current_lcd_state.DATAB
lcd_busy => data_ready.OUTPUTSELECT
lcd_busy => rom_address.OUTPUTSELECT
lcd_busy => rom_address.OUTPUTSELECT
lcd_busy => rom_address.OUTPUTSELECT
lcd_busy => rom_address.OUTPUTSELECT
internal_reset => rom_address.OUTPUTSELECT
internal_reset => rom_address.OUTPUTSELECT
internal_reset => rom_address.OUTPUTSELECT
internal_reset => rom_address.OUTPUTSELECT
internal_reset => data_ready.OUTPUTSELECT
internal_reset => current_lcd_state.OUTPUTSELECT
internal_reset => halt.OUTPUTSELECT
internal_reset => always0.IN1
internal_reset => halt.OUTPUTSELECT
internal_reset => old_reset.DATAIN
rom_address[0] <= rom_address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rom_address[1] <= rom_address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rom_address[2] <= rom_address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rom_address[3] <= rom_address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_ready <= data_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


